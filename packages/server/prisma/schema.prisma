// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
  ARTIST
}

model User {
  id               Int        @id @default(autoincrement())
  username         String     @unique
  email            String     @unique
  password         String
  profilePath      String?
  role             Role       @default(USER)
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
  Playlist         Playlist[]
  Album            Album[]
  Track            Track[]
  likedTracks      Track[]    @relation("UserTrackLikes")
  likedAlbums      Album[]    @relation("UserAlbumLikes")
  likedArtists     User[]     @relation("UserArtistLikes")
  UserArtistsLikes User[]     @relation("UserArtistLikes")
}

model Album {
  id             Int      @id @default(autoincrement())
  title          String
  artistId       Int
  User           User     @relation(fields: [artistId], references: [id])
  year           Int
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  thumbnailPath  String?
  Track          Track[]
  UserAlbumLikes User[]   @relation("UserAlbumLikes")
}

model Track {
  id            Int        @id @default(autoincrement())
  title         String
  albumId       Int?
  Album         Album?     @relation(fields: [albumId], references: [id])
  minutes       Int
  seconds       Int
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  User          User?      @relation(fields: [artistId], references: [id])
  artistId      Int?
  Playlist      Playlist[]
  year          Int
  thumbnailPath String?
  trackPath     String?
  UserLikes     User[]     @relation("UserTrackLikes")
}

model Playlist {
  id            Int      @id @default(autoincrement())
  title         String
  description   String?
  thumbnailPath String?
  userId        Int
  User          User     @relation(fields: [userId], references: [id])
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  Track         Track[]
}
